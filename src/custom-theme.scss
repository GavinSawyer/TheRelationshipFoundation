// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!

$typography-config: mat.define-typography-config(
	$display-4: mat.define-typography-level(
		$font-family: "'Montserrat', sans-serif",
		$font-weight: 800,
		$font-size: 112px,
		$line-height: 112px,
		$letter-spacing: -0.05em
	),
	$display-3: mat.define-typography-level(
		$font-family: "'Montserrat', sans-serif",
		$font-weight: 800,
		$font-size: 56px,
		$line-height: 56px,
		$letter-spacing: -0.02em
	),
	$display-2: mat.define-typography-level(
		$font-family: "'Montserrat', sans-serif",
		$font-weight: 800,
		$font-size: 45px,
		$line-height: 48px,
		$letter-spacing: 0.005em
	),
	$display-1: mat.define-typography-level(
		$font-family: "'Montserrat', sans-serif",
		$font-weight: 800,
		$font-size: 34px,
		$line-height: 40px,
		$letter-spacing: normal
	),
	$headline: mat.define-typography-level(
		$font-family: "'Montserrat', sans-serif",
		$font-weight: 600,
		$font-size: 32px,
		$line-height: 40px,
		$letter-spacing: normal
	),
	$title: mat.define-typography-level(
		$font-family: "'Montserrat', sans-serif",
		$font-weight: 600,
		$font-size: 24px,
		$line-height: 36px,
		$letter-spacing: normal
	),
	$subheading-2: mat.define-typography-level(
		$font-family: "'Crimson Text', serif",
		$font-weight: 600,
		$font-size: 20px,
		$line-height: 32px,
		$letter-spacing: normal
	),
	$subheading-1: mat.define-typography-level(
		$font-family: "'Crimson Text', serif",
		$font-weight: 400,
		$font-size: 20px,
		$line-height: 32px,
		$letter-spacing: normal
	),
	$body-2: mat.define-typography-level(
		$font-family: "'Crimson Text', serif",
		$font-weight: 600,
		$font-size: 16px,
		$line-height: 26px,
		$letter-spacing: normal
	),
	$body-1: mat.define-typography-level(
		$font-family: "'Crimson Text', serif",
		$font-weight: 400,
		$font-size: 16px,
		$line-height: 26px,
		$letter-spacing: normal
	),
	$caption: mat.define-typography-level(
		$font-family: "'Crimson Text', serif",
		$font-weight: 400,
		$font-size: 14px,
		$line-height: 22px,
		$letter-spacing: normal
	),
	$button: mat.define-typography-level(
		$font-family: "'Montserrat', serif",
		$font-weight: 600,
		$font-size: 16px,
	),
	$font-family: "'Crimson Text', serif"
);

@include mat.core($typography-config);

$primary-palette: mat.$blue-palette;

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$TheRelationshipFoundation-light-theme: mat.define-light-theme((
	color: (
		primary: mat.define-palette($primary-palette),
		accent: mat.define-palette(mat.$gray-palette, 800),
		warn: mat.define-palette(mat.$red-palette),
	)
));

$TheRelationshipFoundation-dark-theme: mat.define-dark-theme((
	color: (
		primary: mat.define-palette($primary-palette),
		accent: mat.define-palette(mat.$gray-palette, 100, 50, 200),
		warn: mat.define-palette(mat.$red-palette),
	)
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($TheRelationshipFoundation-light-theme);

@media (prefers-color-scheme: dark) {
	@include mat.all-component-colors($TheRelationshipFoundation-dark-theme);
}

@mixin animated-anchor-underlines($background-color: background, $light-theme-background-palette: mat.$light-theme-background-palette, $dark-theme-background-palette: mat.$dark-theme-background-palette) {
	$light-theme-background-color: mat.get-color-from-palette($light-theme-background-palette, $background-color);
	$dark-theme-background-color: mat.get-color-from-palette($dark-theme-background-palette, $background-color);

	display: inline-block;
	line-height: 1.125em;
	background-position: bottom 0.125em left 0;
	background-size: 0 0.0625em;
	transition:
		background-size 0.25s,
		background-position 0s 0.25s;

	&:hover {
		text-shadow:
			0.0625em 0 $light-theme-background-color,
			0.0625em 0.0625em $light-theme-background-color,
			0 0.0625em $light-theme-background-color,
			-0.0625em 0.0625em $light-theme-background-color,
			-0.0625em 0 $light-theme-background-color,
			-0.0625em -0.0625em $light-theme-background-color,
			0 -0.0625em $light-theme-background-color,
			0.0625em -0.0625em $light-theme-background-color;
		background-image: linear-gradient(currentColor, currentColor);
		background-size: 100% 0.0625em;
		background-repeat: no-repeat;

		@media (prefers-color-scheme: dark) {
			text-shadow:
				0.0625em 0 $dark-theme-background-color,
				0.0625em 0.0625em $dark-theme-background-color,
				0 0.0625em $dark-theme-background-color,
				-0.0625em 0.0625em $dark-theme-background-color,
				-0.0625em 0 $dark-theme-background-color,
				-0.0625em -0.0625em $dark-theme-background-color,
				0 -0.0625em $dark-theme-background-color,
				0.0625em -0.0625em $dark-theme-background-color;
		}
	}
}

html,
body {
	height: 100%;
}
body {
	width: 100vw;
	overflow-x: hidden;
	margin: 0;
	font-family: "Crimson Text", "Helvetica Neue", sans-serif;

	a {
		color: inherit;
		font-weight: bolder;
		text-decoration: none;
	}

	.mat-h1,
	.mat-headline,
	.mat-h2,
	.mat-title,
	.mat-h3,
	.mat-subheading-2,
	.mat-h4,
	.mat-subheading-1,
	.mat-display-4,
	.mat-display-3,
	.mat-display-2,
	.mat-display-1 {
		&:last-child {
			margin-bottom: 0 !important;
		}
		&:not(:last-child) {
			margin-bottom: 1em !important;
		}
	}
	.mat-typography {
		h1,
		h2,
		h3,
		h4,
		p {
			&:last-child {
				margin-bottom: 0 !important;
			}
			&:not(:last-child) {
				margin-bottom: 1em !important;
			}
		}
	}

	h1,
	.mat-h1,
	.mat-headline,
	h3,
	.mat-h3,
	.mat-subheading-2,
	.mat-body-2,
	.mat-body-strong {
		font-style: italic !important;
	}

	youtube-player {
		display: block;
		position: relative;
		width: 100%;
		height: 0;
		padding-bottom: 56.25%;

		iframe {
			position: absolute;
			width: 100% !important;
			height: 100% !important;
		}
	}

	.mat-list-base .mat-list-item {
		@include mat.typography-level($typography-config, 'body-1');
	}

	.mat-card {
		overflow: hidden;
		padding: 1rem;
		border-radius: 0;

		&:not(.mat-card--flat-left-edge) {
			border-top-left-radius: 12px;
			border-bottom-left-radius: 12px;
		}
		&:not(.mat-card--flat-right-edge) {
			border-top-right-radius: 12px;
			border-bottom-right-radius: 12px;
		}

		.mat-card-title-group {
			.mat-card-subtitle {
				&:first-of-type {
					margin-bottom: 0.75rem;
				}
				&:last-of-type {
					margin-bottom: 1rem;
				}
			}

			.mat-card-title {
				&:first-of-type {
					margin-bottom: 0.25rem;
				}
				&:last-of-type {
					margin-bottom: 1rem;
				}
			}

			img {
				margin-bottom: 1rem;
			}
		}

		.mat-card-subtitle {
			@include mat.typography-level($typography-config, 'caption');
		}
		.mat-card-title {
			@include mat.typography-level($typography-config, 'title');
		}
		.mat-card-content {
			@include mat.typography-level($typography-config, 'body-1');
		}
		.mat-card-actions {
			padding: 0 !important;
			margin: 1rem 0 0 !important;
		}

		.mat-card-image,
		youtube-player {
			width: calc(100% + 2rem);
			margin: 0 -1rem !important;

			&:first-child {
				margin-top: -1rem !important;

				&,
				&>iframe {
					border-top-left-radius: inherit;
					border-top-right-radius: inherit;
				}
			}
			&:last-child {
				margin-bottom: -1rem !important;

				&,
				&>iframe {
					border-top-left-radius: inherit;
					border-top-right-radius: inherit;
				}
			}
		}

		youtube-player {
			overflow: hidden;
			padding-bottom: calc(56.25% + (.5625 * 2rem)) !important;

			&:last-child {
				margin-bottom: calc(-1rem - 1px) !important;
			}
		}
	}

	.mat-button-base:not(.mat-icon-button, .mat-fab, .mat-mini-fab),
	.mat-menu-panel {
		overflow: hidden;
		border-radius: 12px !important;
	}

	.mat-button-base:not(.mat-icon-button, .mat-fab, .mat-mini-fab) .mat-button-wrapper > mat-icon {
		font-size: 1.125em;
	}

	.mat-fab,
	.mat-mini-fab {
		.mat-button-wrapper {
			height: 1em;

			mat-icon {
				vertical-align: baseline;
			}
		}
	}

	.mat-icon {
		width: 1em;
		height: 1em;
	}

	.mat-menu-content {
		padding: 0 !important;
	}

	.mat-nav-list,
	.mat-action-list,
	.mat-selection-list,
	.mat-menu-panel {
		padding: 0 !important;

		&, .mat-menu-content div {
			& > a.mat-list-item,
			& > button[mat-list-item],
			& > mat-list-option.mat-list-item,
			& > a.mat-menu-item {
				font-family: mat.font-family($typography-config, 'button');
				font-size: mat.font-size($typography-config, 'button') - 2px;
				font-weight: mat.font-weight($typography-config, 'button');

				&:first-of-type {
					&,
					& > span.mat-list-item-content > span.mat-list-item-ripple,
					& > div.mat-list-item-content > div.mat-list-item-ripple,
					& > div.mat-menu-ripple {
						overflow: hidden;

						border-top-left-radius: 12px !important;
						border-top-right-radius: 12px !important;
					}
				}
				&:last-of-type {
					&,
					& > span.mat-list-item-content > span.mat-list-item-ripple,
					& > div.mat-list-item-content > div.mat-list-item-ripple,
					& > div.mat-menu-ripple {
						overflow: hidden;

						border-bottom-left-radius: 12px !important;
						border-bottom-right-radius: 12px !important;
					}
				}
			}
		}
	}

	.mat-toolbar {
		&--background-transparent {
			background: linear-gradient(to bottom, mat.get-color-from-palette(mat.$light-theme-background-palette, app-bar), transparent);

			@media (prefers-color-scheme: dark) {
				background: linear-gradient(to bottom, mat.get-color-from-palette(mat.$dark-theme-background-palette, app-bar), transparent);
			}
		}

		h1,
		span:not(.mat-button-wrapper) {
			font-style: italic;
		}

		h1 {
			font-family: mat.font-family($typography-config, 'subheading-2');
			font-size: mat.font-size($typography-config, 'subheading-2') + 4px;
			font-weight: mat.font-weight($typography-config, 'subheading-2');
		}

		span:not(.mat-button-wrapper) {
			font-family: mat.font-family($typography-config, 'subheading-1');
			font-size: mat.font-size($typography-config, 'subheading-1') + 4px;
			font-weight: mat.font-weight($typography-config, 'subheading-1');
		}
	}

	.mat-raised-button.mat-primary {
		background-image: linear-gradient(30deg, mat.get-color-from-palette($primary-palette, 300) 0%, mat.get-color-from-palette($primary-palette, 700) 60%),
	}

	.mat-form-field-appearance-fill .mat-form-field-flex {
		border-top-left-radius: 12px;
		border-top-right-radius: 12px;
	}

	header,
	main,
	section {
		a:not(.hide-animation, .mat-button-base, .mat-menu-item, .mat-list-item) {
			@include animated-anchor-underlines()
		}
	}

	header,
	main,
	section,
	footer {
		padding: 2rem;
	}

	footer {
		background-color: mat.get-color-from-palette(mat.$light-theme-background-palette, app-bar);

		a:not(.hide-animation, .mat-button-base, .mat-menu-item, .mat-list-item) {
			@include animated-anchor-underlines(app-bar)
		}

		@media (prefers-color-scheme: dark) {
			background-color: mat.get-color-from-palette(mat.$dark-theme-background-palette, app-bar);
		}
	}

	background-color: mat.get-color-from-palette(mat.$light-theme-background-palette, app-bar);

	@media (prefers-color-scheme: dark) {
		background-color: mat.get-color-from-palette(mat.$dark-theme-background-palette, app-bar);
	}
}

#outlet-container {
	& > *:not(router-outlet) {
		width: 100vw;

		& > header {
			@media screen and (max-width: 599px) {
				padding-top: calc(4rem + 56px);
			}
			@media screen and (min-width: 600px) and (max-width: 959px) {
				padding-top: calc(8rem + 64px);
			}
			@media screen and (min-width: 960px) {
				padding: 16rem 2rem 6rem calc(6rem + 292px);
			}
		}
	}

	@media screen and (max-width: 599px) {
		margin-top: -56px;
	}
	@media screen and (min-width: 600px) and (max-width: 959px) {
		margin-top: -64px;
	}
	@media screen and (min-width: 960px) {
		margin-top: -20rem;
	}
}
